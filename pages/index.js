//Hooks and main imports
import { React, useState, Fragment } from "react";

//API Calls
import axios from "axios"

// Components
import Head from "next/head";
import Image from "next/image";
import Weather from "../components/Weather";
import Spinner from "../components/Spinner";

//Icons and UI
import { Inter } from "@next/font/google";
import { BsSearch, BsTranslate } from "react-icons/bs";
import IconButton from "@material-ui/core/IconButton";
import Snackbar from "@material-ui/core/Snackbar";
import CloseIcon from "@material-ui/icons/Close";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {

  //Constants
  const [city, setCity] = useState("");
  const [weather, setWeather] = useState({});
  const [loading, setLoading] = useState(false);
  const [languageChange, setLanguageChange] = useState(false)
  const [open, setOpen] = useState(false);

  //Variables
  let language = 'sp'
  let langSB = ''
  let placeholder = 'Buscar ciudad'
  let weatherIn = 'Clima en '
  let feelsLike = 'Se siente de '
  let humidity = 'Humedad '
  let wind = 'Viento '

  const handleLanguageChange = () => {
    setLanguageChange(!languageChange)
    setOpen(true);
  }

  if (!languageChange) {
    language = 'sp'
    langSB = 'EspaÃ±ol seleccionado'
    placeholder = 'Buscar ciudad'
    weatherIn = 'Clima en '
    feelsLike = 'Se siente de '
    humidity = 'Humedad '
    wind = 'Viento '
  } else {
    language = 'en'
    langSB = 'English selected'
    placeholder = 'Search city'
    weatherIn = 'Weather in '
    feelsLike = 'Feels like '
    humidity = 'Humidity '
    wind = 'Wind '
  }

  const handleToClose = (event, reason) => {
    if ("clickaway" == reason) return;
    setOpen(false);
  };

  const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&lang=${language}&appid=${process.env.NEXT_PUBLIC_WEATHER_KEY}`;
  // console.log(city)

  const fetchWeather = (e) => {
    e.preventDefault();
    setLoading(true);
    axios.get(url).then((response) => {
      setWeather(response.data);
      // console.log(response.data);
    });
    setCity("");
    setLoading(false);
  };

  if (loading) {
    return <Spinner />
  } else {
    return (
      <div>
        < Head >
          <title>WeatherNext</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/weatherFavicon.ico" />
        </Head >

        {/* Overlay */}
        < div className="absolute top-0 left-0 right-0 bottom-0 bg-black/60 z-[1]" />

        {/* Background Image */}
        < Image
          alt='background'
          src="https://images.pexels.com/photos/296559/pexels-photo-296559.jpeg"
          layout="fill"
          className="object-cover"
        />

        {/* Search */}
        < div className="relative flex flex-col justify-between items-center max-w-[500px] w-full m-auto pt-4 text-white z-[11]" >
          <form onSubmit={fetchWeather} className="flex justify-between items-center w-full  m-auto p-3 bg-transparent border border-gray-300 text-white rounded-2xl ">
            <div>
              <input onChange={(e) => setCity(e.target.value)} className="bg-transparent border-none text-white focus:outline-none text-2xl" type="text" placeholder={placeholder} />
            </div>
            <button onClick={fetchWeather}><BsSearch size={20} /></button>
          </form>
          <button className="mt-2" onClick={handleLanguageChange}><BsTranslate size={28} /></button>
          <Snackbar
            anchorOrigin={{
              horizontal: "left",
              vertical: "bottom",
            }}
            open={open}
            autoHideDuration={5000}
            message={langSB}
            onClose={handleToClose}
            action={
              <Fragment>
                <IconButton
                  size="medium"
                  aria-label="close"
                  color="inherit"
                  onClick={handleToClose}
                >
                  <CloseIcon fontSize="small" />
                </IconButton>
              </Fragment>
            }
          />
        </div >

        {/* Weather */}
        {/* If the endpoint .main is true, then we will display the component <Weather/> */}
        {weather.main && <Weather data={weather}
          weatherIn={weatherIn}
          feelsLike={feelsLike}
          humidity={humidity}
          wind={wind} />}
      </div >
    );
  }
}
